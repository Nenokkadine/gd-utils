name: Release

on:
  push:
    tags:
      - "v*.*.*"

env:
  IMAGE: ghcr.io/nenokkadine/gdutils

jobs:
  ReleaseAssets:
    runs-on: ubuntu-latest

    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - uses: actions/checkout@v2
      - name: Docker Build
        run: docker build . -f builder/Dockerfile -t builder:latest
      - name: Run the Docker image
        run: docker run --name=gdutils --rm -dit builder:latest bash
      - name: Copy Built files
        run: docker cp gdutils:/builder/ ./
      - name: Compress Build Outputs
        run: |
          cd builder
          mkdir build
          tar --exclude='./build' -czf build/gdutils.tar.gz .
      - uses: actions/upload-artifact@v2
        with:
          name: Build Location
          path: builder/build/gdutils.tar.gz

      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: GD-Utils Build ${{ steps.get_version.outputs.VERSION }}
          files: |
            builder/build/gdutils.tar.gz
  DockerImage:
    runs-on: ubuntu-latest
    steps:
      - name: Login to ghcr.io
        run: docker login https://ghcr.io -u token -p ${{ secrets.GH_TOKEN }}
        
      - name: Build and Push image
        run: |
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          echo VERSION=$VERSION
          cd baseimage
          docker build . -t ${{ env.IMAGE }}:$VERSION
          docker tag ${{ env.IMAGE }}:$VERSION ${{ env.IMAGE }}:latest
          echo "Pushing"
          docker push --all-tags ${{ env.IMAGE }}